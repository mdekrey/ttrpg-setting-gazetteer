---
import { getNavigation } from '@/util/nav.astro';
import { removeLeadingSlash, removeTrailingSlash } from '@/util/pathManipulation';
import SidebarEntry, { SectionEntry } from './SidebarEntry.astro';
// import SidebarContent, { Props as SidebarContentProps } from './SidebarContent.astro';
export interface Props {
	currentPage: string;
}

const { currentPage } = Astro.props;
const currentPageMatch = removeLeadingSlash(removeTrailingSlash(currentPage));

const nav = await getNavigation();

const sidebarSections = nav.reduce((collection, item) => {
	let target = collection;
	let next: typeof target | undefined;
	let depth = 0;
	do
	{
		next = target.find(c => item.slug.startsWith(c.slug))?.children;
		if (next) {
			target = next;
			depth++;
		}
	} while (next);

	target && target.push({ ...item, depth, children: [] });
	return collection;
}, [] as SectionEntry[]);

---

<nav aria-label="Primary">
	<ul class={`nav-groups`}>
		{
			sidebarSections.map((section) => (
				<SidebarEntry
					entry={section}
					currentPageMatch={currentPageMatch}
					/>
				))
		}
	</ul>
</nav>

<script>
	window.addEventListener('DOMContentLoaded', () => {
		var target = document.querySelector('[data-current-parent="true"]');
		target?.scrollIntoView({ block: 'center' });
	});
</script>