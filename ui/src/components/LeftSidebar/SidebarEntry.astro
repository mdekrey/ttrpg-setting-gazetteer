---
import ChevronRightIcon from '@heroicons/react/24/outline/ChevronRightIcon'
import sortBy from 'lodash/fp/sortBy';
import { twMerge } from 'tailwind-merge';
import { removeSubpageSegment } from '@/util/pathManipulation';

export type SectionEntry = {
	text: string;
	slug: string;
	header: boolean;
	depth: number;
	sortOrder: number;
	children: Array<SectionEntry>;
};
export type Props = {
	entry: SectionEntry;
	currentPageMatch: string;

};

const { entry, currentPageMatch } = Astro.props as Props;
const { slug, text } = entry;

const isCurrent = currentPageMatch.endsWith(slug);
const isWithin = currentPageMatch.startsWith(slug);

const sortedChildren = sortBy(['sortOrder'], entry.children);
---

<li class:list={["px-1", {"mb-4": entry.depth === 0 }]}>
	{entry.header
		? <Fragment>
			<details open={entry.depth === 0 || isWithin}>
				<summary class="cursor-pointer list-none">
					<h2 class="inline font-bold">
						{entry.text}
						<ChevronRightIcon className="inline align-baseline h-3 w-3 rotate-when-open" />
					</h2>
				</summary>
				<ul class="ml-2">
					{sortedChildren.map((entry) => (
						<Astro.self entry={entry} currentPageMatch={currentPageMatch} />
					))}
				</ul>
			</details>
		</Fragment>
		: <Fragment>
			<a
				class:list={['block', { 'rounded-sm bg-blue-200 font-bold': isCurrent, 'border-b border-blue-200 font-bold': isWithin }]}
				href={`${Astro.site?.pathname ?? '/'}${slug}/`}
				aria-current={`${isCurrent ? 'page' : 'false'}`}
				data-current-parent={`${
					removeSubpageSegment(currentPageMatch).endsWith(removeSubpageSegment(slug))
						? 'true'
						: 'false'
				}`}
			>
				{text}
				{sortedChildren.length > 0
				? <ChevronRightIcon className={twMerge('inline align-baseline h-3 w-3', isWithin && 'rotate-90', !isWithin && 'rotate-0')} />
				: null}
			</a>

			{sortedChildren.length > 0 && isWithin
				? <ul class="ml-1 pl-1 border-l-2 border-blue-200">
					{sortedChildren.map((childEntry) => (
						<Astro.self entry={childEntry} currentPageMatch={currentPageMatch} />
					))}
				</ul>
				: null}
		</Fragment>}
</li>
<style>
	.rotate-when-open {
		transform: rotate(0);
		@apply transition-transform;
	}

	details[open] > summary .rotate-when-open {
		transform: rotate(90deg);
	}
</style>