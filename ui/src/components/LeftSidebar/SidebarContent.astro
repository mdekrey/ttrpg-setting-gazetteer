---
import SidebarEntry  from './SidebarEntry.astro';
export type SectionEntry = {
		text: string;
		slug: string;
		children: Array<SectionEntry>;
	};
export interface Props {
	sidebarSections: Array<{
		text: string;
		children: Array<SectionEntry>;
	}>;
	currentPageMatch: string;
}
const { sidebarSections, currentPageMatch } = Astro.props as Props;
---

{
	sidebarSections.map((section) => (
		<li class="mb-4">
			<details open>
				<summary class="cursor-pointer list-none">
					<h2 class="inline font-bold">
						{section.text}
						<svg
							xmlns="http://www.w3.org/2000/svg"
							viewBox="0 1 16 16"
							class="inline h-4 w-4 rotate-when-open"
							aria-hidden="true"
						>
							<path
								fill-rule="evenodd"
								d="M6.22 3.22a.75.75 0 011.06 0l4.25 4.25a.75.75 0 010 1.06l-4.25 4.25a.75.75 0 01-1.06-1.06L9.94 8 6.22 4.28a.75.75 0 010-1.06z"
							/>
						</svg>
					</h2>
				</summary>
				<ul class="ml-2">
					{section.children.map((entry) => (
						<SidebarEntry entry={entry} currentPageMatch={currentPageMatch} />
					))}
				</ul>
			</details>
		</li>
	))
}
<style>
	.rotate-when-open {
		transform: rotate(0);
		@apply transition-transform;
	}

	details[open] summary .rotate-when-open {
		transform: rotate(90deg);
	}
</style>